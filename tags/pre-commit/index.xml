<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pre-commit on Javier Domingo Cansino (txomon)</title>
    <link>http://txomon.com/tags/pre-commit/</link>
    <description>Recent content in pre-commit on Javier Domingo Cansino (txomon)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Mar 2020 19:34:35 +0100</lastBuildDate>
    
	<atom:link href="http://txomon.com/tags/pre-commit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generic Pre Commit</title>
      <link>http://txomon.com/post/2020/03/21/generic-pre-commit/</link>
      <pubDate>Sat, 21 Mar 2020 19:34:35 +0100</pubDate>
      
      <guid>http://txomon.com/post/2020/03/21/generic-pre-commit/</guid>
      <description>I have created https://github.com/txomon/pre-commit-hooks as a generic way to have random code be specified directly in my git repos without having to create custom hooks. The inner working are basics, and you can actually check them there.
pre-commit relies on you adding a hooks repository and the hook id within it, which will be then linked to whatever scripts you have set in that hooks repository.
My solution is to create a generic hook that uses system kind of hook, and just run bash -c with it.</description>
    </item>
    
  </channel>
</rss>